// <auto-generated />
using System;
using GrupoMad.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace GrupoMad.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20251028211735_AddSKUToProductColor")]
    partial class AddSKUToProductColor
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "9.0.10");

            modelBuilder.Entity("GrupoMad.Models.Color", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("TEXT");

                    b.Property<bool>("IsActive")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Colors");
                });

            modelBuilder.Entity("GrupoMad.Models.Company", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Companies");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Deconolux"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Persianas Mad"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Persitex"
                        });
                });

            modelBuilder.Entity("GrupoMad.Models.PriceList", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("TEXT");

                    b.Property<bool>("IsActive")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int?>("StoreId")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("StoreId");

                    b.ToTable("PriceLists");
                });

            modelBuilder.Entity("GrupoMad.Models.PriceListItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("TEXT");

                    b.Property<int>("PriceListId")
                        .HasColumnType("INTEGER");

                    b.Property<decimal?>("PricePerLinearMeter")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("PricePerSquareMeter")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("PricePerUnit")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("ProductId")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("PriceListId");

                    b.HasIndex("ProductId");

                    b.ToTable("PriceListItems");
                });

            modelBuilder.Entity("GrupoMad.Models.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("TEXT");

                    b.Property<string>("Description")
                        .HasColumnType("TEXT");

                    b.Property<bool>("IsActive")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("PricingType")
                        .HasColumnType("INTEGER");

                    b.Property<int>("ProductType")
                        .HasColumnType("INTEGER");

                    b.Property<string>("SKU")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int?>("StoreId")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("StoreId");

                    b.ToTable("Products");

                    b.HasDiscriminator<int>("ProductType");

                    b.UseTphMappingStrategy();
                });

            modelBuilder.Entity("GrupoMad.Models.ProductColor", b =>
                {
                    b.Property<int>("ProductId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("ColorId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("SKU")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("ProductId", "ColorId");

                    b.HasIndex("ColorId");

                    b.ToTable("ProductColors");
                });

            modelBuilder.Entity("GrupoMad.Models.Store", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int?>("CompanyId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("CompanyId");

                    b.ToTable("Stores");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CompanyId = 1,
                            Name = "Sucursal Pachuca Revolucion"
                        },
                        new
                        {
                            Id = 2,
                            CompanyId = 1,
                            Name = "Sucursal Pachuca Plaza de las Americas"
                        },
                        new
                        {
                            Id = 3,
                            CompanyId = 1,
                            Name = "Sucursal Puebla"
                        },
                        new
                        {
                            Id = 4,
                            CompanyId = 1,
                            Name = "Sucursal Tlaxcala"
                        },
                        new
                        {
                            Id = 5,
                            CompanyId = 1,
                            Name = "Sucursal Apizaco"
                        });
                });

            modelBuilder.Entity("GrupoMad.Models.AccessoryProduct", b =>
                {
                    b.HasBaseType("GrupoMad.Models.Product");

                    b.HasDiscriminator().HasValue(0);
                });

            modelBuilder.Entity("GrupoMad.Models.BlindProduct", b =>
                {
                    b.HasBaseType("GrupoMad.Models.Product");

                    b.HasDiscriminator().HasValue(1);
                });

            modelBuilder.Entity("GrupoMad.Models.PriceList", b =>
                {
                    b.HasOne("GrupoMad.Models.Store", "Store")
                        .WithMany("PriceLists")
                        .HasForeignKey("StoreId");

                    b.Navigation("Store");
                });

            modelBuilder.Entity("GrupoMad.Models.PriceListItem", b =>
                {
                    b.HasOne("GrupoMad.Models.PriceList", "PriceList")
                        .WithMany("PriceListItems")
                        .HasForeignKey("PriceListId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GrupoMad.Models.Product", "Product")
                        .WithMany("PriceListItems")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("PriceList");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("GrupoMad.Models.Product", b =>
                {
                    b.HasOne("GrupoMad.Models.Store", "Store")
                        .WithMany("Products")
                        .HasForeignKey("StoreId");

                    b.Navigation("Store");
                });

            modelBuilder.Entity("GrupoMad.Models.ProductColor", b =>
                {
                    b.HasOne("GrupoMad.Models.Color", "Color")
                        .WithMany("ProductColors")
                        .HasForeignKey("ColorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GrupoMad.Models.Product", "Product")
                        .WithMany("ProductColors")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Color");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("GrupoMad.Models.Store", b =>
                {
                    b.HasOne("GrupoMad.Models.Company", "Company")
                        .WithMany("Stores")
                        .HasForeignKey("CompanyId");

                    b.Navigation("Company");
                });

            modelBuilder.Entity("GrupoMad.Models.Color", b =>
                {
                    b.Navigation("ProductColors");
                });

            modelBuilder.Entity("GrupoMad.Models.Company", b =>
                {
                    b.Navigation("Stores");
                });

            modelBuilder.Entity("GrupoMad.Models.PriceList", b =>
                {
                    b.Navigation("PriceListItems");
                });

            modelBuilder.Entity("GrupoMad.Models.Product", b =>
                {
                    b.Navigation("PriceListItems");

                    b.Navigation("ProductColors");
                });

            modelBuilder.Entity("GrupoMad.Models.Store", b =>
                {
                    b.Navigation("PriceLists");

                    b.Navigation("Products");
                });
#pragma warning restore 612, 618
        }
    }
}
